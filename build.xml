<?xml version="1.0"?>

<project name="Wordle 6R" default="todo" basedir="."
	xmlns:jacoco="antlib:org.jacoco.ant">

	<description> Wordle Grupo 6R. Integrantes: MouhcineEO, SergioG, VictorM y Samuel </description>

	<property name="src" value="src" />
	<property name="classes" value="classes" />
	<property name="conf.dir" value="etc" />
	<property name="doc" value="doc" />
	<property name="log" value="log" />
	<property name="lib"
		value="lib/junit-4.8.2.jar:lib/log4j-api-2.5.jar:lib/log4j-core-2.5.jar:lib/jacocoant.jar:etc:." />
	<property name="lib1" value="lib/log4j-api-2.5.jar" />
	<property name="lib2" value="lib/log4j-core-2.5.jar" />
	<property name="lib3" value="lib/jacocoant.jar" />
	<property name="test" value="test" />
	<property name="paquetes" value="es.unileon.prg1.wordle" />
	<property name="titulo" value="Wordle2E" />
	<property name="coverage.result.dir"
		location="./coverage_report" />
	<property name="coverage.result.report.dir"
		location="${coverage.result.dir}/site/jacoco" />
	<property name="coverage.result.exec.file"
		location="${coverage.result.dir}/jacoco.exec" />

	<target name="init" depends="clean">

		<echo message="Creando directorios..." />

		<mkdir dir="classes" />
		<mkdir dir="doc" />
		<mkdir dir="log" />

	</target>

	<target name="compilar"
		description="Crear los directorios y compilar" depends="init">

		<echo message="Compilando codigo..." />

		<javac srcdir="${src}" destdir="${classes}" verbose="true"
			debug="true" includeantruntime="false">

			<classpath>

				<pathelement path="${classes}" />
				<pathelement path="${lib}" />

			</classpath>

		</javac>

		<echo message="Codigo compilado" />

	</target>

	<target name="doc" depends="compilar"
		description="Generar la documentacion">

		<javadoc sourcepath="${src}" packagenames="${paquetes}"
			destdir="${doc}" verbose="true" author="true" access="private"
			splitindex="true" version="true" windowtitle="${titulo}"
			doctitle="${titulo}">

			<classpath>

				<pathelement path="${classes}" />
				<pathelement path="${lib}" />
				<pathelement path="${lib1}" />
				<pathelement path="${lib2}" />

			</classpath>

		</javadoc>

	</target>

	<target name="compilarTests" depends="doc"
		description="compilar test">

		<mkdir dir="${classes}" />
		<javac srcdir="${test}" destdir="${classes}" classpath="${lib}"
			includeantruntime="false" />

		<echo message="Test compilation...done" />

	</target>

	<target name="test" depends="compilarTests"
		description="ejecutar los test">

		<java fork="true" classname="org.junit.runner.JUnitCore">

			<classpath>

				<pathelement path="${classes}" />
				<pathelement path="${lib}" />
				<pathelement path="etc" />

			</classpath>

			<arg value="es.unileon.prg1.wordle.AllTests" />

		</java>

		<jacoco:coverage
			destfile="${coverage.result.exec.file}">
			<junit showoutput="true" printsummary="yes" haltonfailure="no"
				enabletestlistenerevents="true" fork="true">

				<classpath>
					<pathelement path="${classes}" />
					<pathelement path="${conf.dir}" />
					<pathelement path="${lib}" />
				</classpath>

				<batchtest todir="${coverage.result.dir}">
					<fileset dir="${classes}">
						<exclude name="**/*$*.class" />
						<include name="**/*Test.class" />
					</fileset>
				</batchtest>

				<test name="${paquetes}.AllTests" haltonfailure="no"
					outfile="result" todir="${log}">
					<formatter type="xml" />
				</test>
			</junit>

		</jacoco:coverage>
	</target>

	<target name="report" depends="test">
		<jacoco:report>

			<executiondata>
				<file file="${coverage.result.exec.file}" />
			</executiondata>

			<structure name="Coverage with Jacoco">
				<classfiles>
					<fileset dir="${classes}" />
				</classfiles>
				<sourcefiles encoding="UTF-8">
					<fileset dir="${src}" />
				</sourcefiles>
			</structure>

			<html destdir="${coverage.result.report.dir}" />
			<csv destfile="${coverage.result.report.dir}/report.csv" />
			<xml destfile="${coverage.result.report.dir}/report.xml" />
		</jacoco:report>
		<echo message="Generating coverage report with jacoco...done" />
	</target>


	<target name="run" description="Ejecutar el programa"
		depends="test">

		<echo message="Ejecutando worlde.." />
		<java fork="true" classname="es.unileon.prg1.wordle.MainWordle">

			<classpath>

				<pathelement path="${classes}" />
				<pathelement path="${lib}" />
				<pathelement path="${lib1}" />
				<pathelement path="${lib2}" />
				<pathelement path="etc" />

			</classpath> 
			
			<arg value= "etc/fullDictionary.txt" />
			<arg value= "6" />
			<arg value= "6"/>

		</java>

	</target>

	<target name="todo" depends="report, run" />

	<target name="clean" description="Borrar los directorios">

		<delete dir="${classes}" />
		<delete dir="${doc}" />
		<delete dir="${log}" />
		<delete dir="${coverage.result.dir}" />

	</target>

	<taskdef uri="antlib:org.jacoco.ant"
		resource="org/jacoco/ant/antlib.xml">
		<classpath path="./lib/jacocoant.jar" />
	</taskdef>

</project>


